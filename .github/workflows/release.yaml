on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '[v]?[0-9]+.[0-9]+.[0-9]+' # semver, optional opening 'v', no extension
      - '[v]?[0-9]+.[0-9]+.[0-9]+-*' # semver, optional opening 'v', extension

name: Create Release

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Get tag comment
        id: get_tag_comment
        run: echo ::set-output name=COMMENT::$(git tag -l --format='%(subject)' ${GITHUB_REF/refs\/tags\//})
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # provided by Actions
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.get_tag_comment.outputs.COMMENT }}
          draft: false
          prerelease: false
      - name: save_upload_url
        shell: bash
        run: |
          echo ${{ steps.create_release.outputs.upload_url }}
          echo ${{ steps.create_release.outputs.upload_url }} > upload_url
      - name: Upload url for release
        uses: actions/upload-artifact@v1
        with:
          name: upload_url
          path: upload_url
  build:
    name: Build And Release Artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
        - os: darwin
          arch: arm64
        - os: windows
          arch: arm64
    steps:
    - name: checkout
      uses: actions/checkout@v1
    - uses: actions/setup-go@v1
      with:
        go-version: '1.13.5' # The Go version to download (if necessary) and use.
    - name: build
      run: make build OS=${{ matrix.os }} ARCH=${{ matrix.arch }}
    - name: Download upload_url
      uses: actions/download-artifact@v1
      with:
        name: upload_url
    - name: Set upload_url
      id: upload_url
      run: |
          echo ::set-output name=upload_url::$(cat upload_url/upload_url)
    - name: Upload Release Assets
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.upload_url.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`
        asset_path: ./dist/ca-${{ matrix.os }}-${{ matrix.arch }}
        asset_name: ca-${{ matrix.os }}-${{ matrix.arch }}
        asset_content_type: application/octet-stream

